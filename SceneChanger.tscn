[gd_scene load_steps=11 format=2]

[ext_resource path="res://SceneChanger.gd" type="Script" id=1]

[sub_resource type="VisualShaderNodeVectorDistance" id=81]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 513, 315, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=82]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeCompare" id=83]
default_input_values = [ 0, 0.0, 1, 20.0, 2, 1e-05 ]
function = 2

[sub_resource type="VisualShaderNodeScalarSwitch" id=87]

[sub_resource type="VisualShaderNodeScalarUniform" id=88]
uniform_name = "Radius"

[sub_resource type="VisualShader" id=85]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float Radius;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = FRAGCOORD.xyz;

// Distance:2
	vec3 n_in2p1 = vec3(513.00000, 315.00000, 0.00000);
	float n_out2p0 = distance(n_out3p0, n_in2p1);

// ScalarUniform:7
	float n_out7p0 = Radius;

// Compare:4
	bool n_out4p0 = n_out2p0>n_out7p0;

// ScalarSwitch:6
	float n_in6p1 = 1.00000;
	float n_in6p2 = 0.00000;
	float n_out6p0;
	if(n_out4p0)
	{
		n_out6p0 = n_in6p1;
	}
	else
	{
		n_out6p0 = n_in6p2;
	}

// Output:0
	COLOR.a = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -269, 44 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( 600, 180 )
nodes/fragment/2/node = SubResource( 81 )
nodes/fragment/2/position = Vector2( -40, 200 )
nodes/fragment/3/node = SubResource( 82 )
nodes/fragment/3/position = Vector2( -260, 220 )
nodes/fragment/4/node = SubResource( 83 )
nodes/fragment/4/position = Vector2( 180, 220 )
nodes/fragment/6/node = SubResource( 87 )
nodes/fragment/6/position = Vector2( 380, 260 )
nodes/fragment/7/node = SubResource( 88 )
nodes/fragment/7/position = Vector2( -40, 320 )
nodes/fragment/connections = PoolIntArray( 4, 0, 6, 0, 6, 0, 0, 1, 3, 0, 2, 0, 2, 0, 4, 0, 7, 0, 4, 1 )

[sub_resource type="ShaderMaterial" id=86]
shader = SubResource( 85 )
shader_param/Radius = 600.0

[sub_resource type="Animation" id=89]
resource_name = "FadeIn"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("Control/FadeOutCircle:material:shader_param/Radius")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 3.03143, 0.34151 ),
"update": 0,
"values": [ 0.0, 600.0 ]
}

[sub_resource type="Animation" id=90]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Control/FadeOutCircle:material:shader_param/Radius")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[node name="SceneChanger" type="CanvasLayer"]
layer = 2
script = ExtResource( 1 )

[node name="Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="FadeOutCircle" type="ColorRect" parent="Control"]
material = SubResource( 86 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
reset_on_save = false
anims/FadeIn = SubResource( 89 )
anims/RESET = SubResource( 90 )
